pub const FOURTH_ORDER_TENSOR_A: [[[[f64; 3]; 3]; 3]; 3] = [
    // [0]
    [
        // [0][0]
        [
            [1111_f64, 1112_f64, 1113_f64], // [0][0][0][...]
            [1121_f64, 1122_f64, 1123_f64], // [0][0][1][...]
            [1131_f64, 1132_f64, 1133_f64], // [0][0][2][...]
        ],
        // [0][1]
        [
            [1211_f64, 1212_f64, 1213_f64], // [0][1][0][...]
            [1221_f64, 1222_f64, 1223_f64], // [0][1][1][...]
            [1231_f64, 1232_f64, 1233_f64], // [0][1][2][...]
        ],
        // [0][2]
        [
            [1311_f64, 1312_f64, 1313_f64], // [0][2][0][...]
            [1321_f64, 1322_f64, 1323_f64], // [0][2][1][...]
            [1331_f64, 1332_f64, 1333_f64], // [0][2][2][...]
        ],
    ],
    // [1]
    [
        // [1][0]
        [
            [2111_f64, 2112_f64, 2113_f64], // [1][0][0][...]
            [2121_f64, 2122_f64, 2123_f64], // [1][0][1][...]
            [2131_f64, 2132_f64, 2133_f64], // [1][0][2][...]
        ],
        // [1][1]
        [
            [2211_f64, 2212_f64, 2213_f64], // [1][1][0][...]
            [2221_f64, 2222_f64, 2223_f64], // [1][1][1][...]
            [2231_f64, 2232_f64, 2233_f64], // [1][1][2][...]
        ],
        // [1][2]
        [
            [2311_f64, 2312_f64, 2313_f64], // [1][2][0][...]
            [2321_f64, 2322_f64, 2323_f64], // [1][2][1][...]
            [2331_f64, 2332_f64, 2333_f64], // [1][2][2][...]
        ],
    ],
    // [3]
    [
        // [3][0]
        [
            [3111_f64, 3112_f64, 3113_f64], // [2][0][0][...]
            [3121_f64, 3122_f64, 3123_f64], // [2][0][1][...]
            [3131_f64, 3132_f64, 3133_f64], // [2][0][2][...]
        ],
        // [3][1]
        [
            [3211_f64, 3212_f64, 3213_f64], // [2][1][0][...]
            [3221_f64, 3222_f64, 3223_f64], // [2][1][1][...]
            [3231_f64, 3232_f64, 3233_f64], // [2][1][2][...]
        ],
        // [3][2]
        [
            [3311_f64, 3312_f64, 3313_f64], // [2][2][0][...]
            [3321_f64, 3322_f64, 3323_f64], // [2][2][1][...]
            [3331_f64, 3332_f64, 3333_f64], // [2][2][2][...]
        ],
    ],
];

///////////////////////////////////////////////////////////////////////////////

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn components_of_tensor_are_correct() {
        for i in 0..3 {
            for j in 0..3 {
                for k in 0..3 {
                    for l in 0..3 {
                        let val = (i + 1) * 1000 + (j + 1) * 100 + (k + 1) * 10 + (l + 1);
                        assert_eq!(FOURTH_ORDER_TENSOR_A[i][j][k][l], val as f64);
                    }
                }
            }
        }
    }
}
